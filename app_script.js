var CHANNEL_TOKEN = "‡πÉ‡∏™‡πà Token ID bot";
var GDRIVE_FOLDER_FILE_ID = "‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡πÇ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå";
var GDRIVE_FOLDER_IMAGE_ID = "‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡πÇ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏ß‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ";
var GDRIVE_FOLDER_VIDEO_ID = "‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡πÇ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏ß‡πâ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠";
var GDRIVE_FOLDER_AUDIO_ID = "‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡πÇ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏ß‡πâ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á";

//‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≤‡∏°‡πÇ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á
var folderMap = {
  "File_Video": GDRIVE_FOLDER_VIDEO_ID,
  "File_Photo": GDRIVE_FOLDER_IMAGE_ID,
  "File_Sound": GDRIVE_FOLDER_AUDIO_ID,
  "File_File": GDRIVE_FOLDER_FILE_ID
};
//‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô FV ‡∏û‡∏ß‡∏Å‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡πÑ‡∏≠‡∏î‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡∏π
var prefixMap = {
  "File_Video": "FV",
  "File_Image": "FP",
  "File_Audio": "FS",
  "File_File": "FL"
};
//‡∏ï‡∏±‡∏ß‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏±‡∏ô‡πÑ‡∏ß‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏≤‡∏û‡∏¥‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡πá‡∏Å
var userFolderMap = {
  "photo": "File_Image",
  "video": "File_Video",
  "sound": "File_Audio",
  "file": "File_All"
};

var FILES_PER_PAGE = 10;

// ================== doPost ‡∏£‡∏ß‡∏° ==================
// =================== MAIN POST ===================
function doPost(e) {
  try {
    var value = JSON.parse(e.postData.contents);
    var event = value.events[0];
    var type = event.type;
    var replyToken = event.replyToken;
    var userId = event.source.userId;
    var userProfile = getUserProfile(userId);
    var displayName = userProfile.displayName;

    // -------- CASE MESSAGE --------
    if (type === "message") {
      var messageType = event.message.type;
      var replyMessage = [];

      if (messageType === "text") {
        var userMessage = event.message.text.trim();

        // Help Command
        if (userMessage.toLowerCase() === "help") {
          var helpFlex = {
            type: "flex",
            altText: "üìñ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠",
            contents: {
              type: "bubble",
              size: "mega",
              body: {
                type: "box",
                layout: "vertical",
                contents: [
                  {
                    type: "text",
                    text: "‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏ö‡∏≠‡∏ó",
                    weight: "bold",
                    size: "xl",
                    color: "#1DB446",
                    margin: "md"
                  },
                  { type: "text", text: "‡∏ö‡∏≠‡∏ó‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏≠‡∏ó‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô", size: "sm", color: "#888888", wrap: true },
                  { type: "separator", margin: "md" },
                  {
                    type: "box",
                    layout: "vertical",
                    margin: "lg",
                    spacing: "sm",
                    contents: [
                      { type: "text", text: "1. Upload", wrap: true },
                      { type: "text", text: "   ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó -> Backup", size: "sm", color: "#888888", wrap: true },
                      { type: "text", text: "2. ‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô [‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå]", wrap: true },
                      { type: "text", text: "   ‡πÄ‡∏ä‡πà‡∏ô: ‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô Photo", size: "sm", color: "#888888", wrap: true },
                      { type: "text", text: "3. Help", wrap: true },
                      { type: "text", text: "   ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á", size: "sm", color: "#888888", wrap: true }
                    ]
                  }
                ]
              }
            }
          };
          replyMsg(replyToken, [helpFlex]);
          return;
        }

        // ‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        if (userMessage.startsWith("‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô")) {
          var folderInput = userMessage.split("‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô")[1]?.trim();
          replyMsg(replyToken, listUserFilesByType(userId, folderInput, 1));
          return;
        }

        // ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
        if (userMessage === "‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î") {
          replyMsg(replyToken, [createTextFlex(deleteLastUploadedFile(userId))]);
          return;
        }

      }

      // -------- Upload files --------
      if (messageType === "file") {
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå
        replyMessage = handleFileMessageWithButtons(event, displayName, userId);
      } else if (messageType === "image") {
        var link = toDrive(event.message.id, "image/jpeg", ".jpg", GDRIVE_FOLDER_IMAGE_ID, userId, displayName);
        replyMessage = [createLinkFlexMessage("üñºÔ∏è ‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û", link, displayName)];
      } else if (messageType === "video") {
        var link = toDrive(event.message.id, "video/mp4", ".mp4", GDRIVE_FOLDER_VIDEO_ID, userId, displayName);
        replyMessage = [createLinkFlexMessage("üéûÔ∏è ‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠", link, displayName)];
      } else if (messageType === "audio") {
        var link = toDrive(event.message.id, "audio/mpeg", ".mp3", GDRIVE_FOLDER_AUDIO_ID, userId, displayName);
        replyMessage = [createLinkFlexMessage("üîä ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á", link, displayName)];
      }

      if (replyMessage.length > 0) replyMsg(replyToken, replyMessage);
    }

    // -------- CASE POSTBACK --------
    else if (type === "postback") {
      var data = event.postback.data;
      if (data.startsWith("deleteFile=")) {
        var fileId = data.split("=")[1];
        try {
          DriveApp.getFileById(fileId).setTrashed(true);
          replyMsg(replyToken, [createTextFlex("üóëÔ∏è ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")]);
        } catch (e) {
          replyMsg(replyToken, [createTextFlex("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ: " + e.message)]);
        }
      }
    }

  } catch (error) {
    Logger.log("Error in doPost: " + error);
  }
}

function createTextFlex(text) {
  return { type: "text", text: text };
  return {
    type: "flex",
    altText: text,
    contents: {
      type: "bubble",
      body: {
        type: "box",
        layout: "vertical",
        contents: [
          {
            type: "text",
            text: text,
            wrap: true,
            size: "md"
          }
        ]
      }
    }
  };
}
//‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ô‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
function createLinkFlexMessage(title, url, displayName) {
  return {
    type: "flex",
    altText: title + " ‡∏à‡∏≤‡∏Å " + displayName,
    contents: {
      type: "bubble",
      body: {
        type: "box",
        layout: "vertical",
        spacing: "sm",
        contents: [
          {
            type: "text",
            text: title,
            weight: "bold",
            size: "md",
            color: "#000000"
          },
          {
            type: "text",
            text: url,
            color: "#1DB446",
            size: "sm",
            wrap: true,
            action: {
              type: "uri",
              uri: url
            }
          },
          {
            type: "text",
            text: "‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏î‡∏¢ : " + displayName,
            size: "xs",
            color: "#888888",
            margin: "md"
          }
        ]
      }
    }
  };
}
//‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≠‡∏ô‡∏û‡∏¥‡∏°‡∏ß‡πà‡∏≤ ‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô .....
function createFileBubble(file, idStr, displayName) {
  var fileId = file.getId();
  var date = Utilities.formatDate(file.getDateCreated(), Session.getScriptTimeZone(), "dd/MM/yyyy");

  return {
    type: "bubble",
    size: "micro",
    body: {
      type: "box",
      layout: "vertical",
      spacing: "md",
      paddingAll: "12px",
      backgroundColor: "#f8f9fa", // ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏≠‡πà‡∏≠‡∏ô
      cornerRadius: "10px", // ‡∏°‡∏∏‡∏°‡πÇ‡∏Ñ‡πâ‡∏á
      contents: [
        {
          type: "text",
          text: `[ID: ${idStr}] ${file.getName()}`,
          weight: "bold",
          size: "md",
          wrap: true,
          color: "#333333"
        },
        {
          type: "text",
          text: date,
          size: "xs",
          color: "#888888",
          margin: "sm"
        },
        {
          type: "button",
          style: "primary",
          color: "#4CAF50", // ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
          height: "sm",
          margin: "md",
          action: {
            type: "uri",
            label: "‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå",
            uri: "https://drive.google.com/file/d/" + fileId + "/view"
          }
        },
        {
          type: "button",
          style: "secondary",
          color: "#FF3B30", // ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏µ‡πÅ‡∏î‡∏á
          height: "sm",
          margin: "sm",
          action: {
            type: "postback",
            label: "‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ",
            data: "deleteFile=" + fileId
          }
        }
      ]
    }
  };
}

function listAllFilesInGivenFolderSimple(folderId) {
  try {
    var folder = DriveApp.getFolderById(folderId);
    var files = folder.getFiles();
    var fileList = [];
    var prefix = "ID";
    for (var key in folderMap) {
      if (folderMap[key] === folderId) {
        prefix = prefixMap[key];
        break;
      }
    }
    var index = 0;
    while (files.hasNext()) {
      var file = files.next();
      index++;
      var idStr = prefix + ('00' + index).slice(-3);
      fileList.push(idStr + " (" + file.getName() + ")");
    }
    return fileList;
  } catch (e) {
    return [];
  }
}

function handleFileMessage(event, displayName, userId) {
  var fileName = event.message.fileName;
  var fileType = fileName.split('.').pop().toLowerCase();
  var mimetype = getMimeType(fileType);

  if (mimetype !== "undefined") {
    var messageId = event.message.id;
    var folderId = GDRIVE_FOLDER_FILE_ID; // ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å

    var link = toDrive(messageId, mimetype, '.' + fileType, folderId, userId, displayName);
    var file = DriveApp.getFileById(link.split("/d/")[1].split("/view")[0]); // ‡∏î‡∏∂‡∏á file object

    notifyNewUpload(fileName, file.getId(), displayName); // ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    logUploadToSheet(fileName, displayName, link);

    // ‡πÉ‡∏ä‡πâ createFileBubble ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Flex card ‡πÅ‡∏ö‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö
    var prefix = "FL"; // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ä‡πâ FL
    return [{
      type: "flex",
      altText: "‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå: " + fileName,
      contents: createFileBubble(file, prefix + "001", displayName) // ‡πÉ‡∏™‡πà idStr ‡πÄ‡∏õ‡πá‡∏ô FL001
    }];
  } else {
    return [createTextFlex('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏µ‡πâ')];
  }
}
//‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏≤‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå
function handlePostback(event) {
  var data = event.postback.data;
  var replyToken = event.replyToken;

  if (data.startsWith("deleteFile=")) {
    var fileId = data.split("deleteFile=")[1];
    try {
      DriveApp.getFileById(fileId).setTrashed(true); // ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞
      replyMsg(replyToken, [createTextFlex("‚úÖ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")]);
    } catch (err) {
      replyMsg(replyToken, [createTextFlex("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ: " + err.message)]);
    }
  }
}
// --- sanitize ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ --- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πå‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠
function sanitizeName(displayName) {
  if (!displayName) return "user";
  // ‡πÅ‡∏ó‡∏ô‡πÅ‡∏Ñ‡πà‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà Google Drive ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ‡∏î‡πâ‡∏ß‡∏¢ _
  return displayName.replace(/[\/\\\:\*\?\"\<\>\|]/g, "_");
}
// --- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå ---
function toDrive(messageId, meType, mType, parentFolderId, userId, displayName) {
  try {
    var parentFolder = DriveApp.getFolderById(parentFolderId);
    var cleanName = sanitizeName(displayName); // sanitize ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    var userFolder = null;
    var folders = parentFolder.getFoldersByName(cleanName);
    if (folders.hasNext()) {
      userFolder = folders.next();
    } else {
      userFolder = parentFolder.createFolder(cleanName);
      Logger.log("‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: " + cleanName);
    }

    // ‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å LINE
    var url = "https://api-data.line.me/v2/bot/message/" + messageId + "/content";
    var headers = { "headers": { "Authorization": "Bearer " + CHANNEL_TOKEN } };
    var getcontent = UrlFetchApp.fetch(url, headers);
    var blob = getcontent.getBlob();
    var fileBlob = Utilities.newBlob(blob.getBytes(), meType, messageId + mType);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    var file = userFolder.createFile(fileBlob);
    var fileId = file.getId();

    // ‡πÄ‡∏Å‡πá‡∏ö last uploaded file
    PropertiesService.getScriptProperties().setProperty("lastFile_" + userId, fileId);

    return `https://drive.google.com/file/d/${fileId}/view`;
  } catch (e) {
    Logger.log("Error toDrive: " + e);
    return null;
  }
}

function getMimeType(ext) {
  var types = {
    "jpg": "image/jpeg",
    "jpeg": "image/jpeg",
    "png": "image/png",
    "gif": "image/gif",
    "mp4": "video/mp4",
    "mov": "video/quicktime",
    "mp3": "audio/mpeg",
    "wav": "audio/wav",
    "pdf": "application/pdf",
    "doc": "application/msword",
    "docx": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
    "xlsx": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
    "txt": "text/plain"
  };
  return types[ext] || "undefined";
}

function notifyNewUpload(fileName, fileId, displayName) {
  var msg = {
    type: "flex",
    altText: "‡πÅ‡∏à‡πâ‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà",
    contents: {
      type: "bubble",
      body: {
        type: "box",
        layout: "vertical",
        spacing: "md",
        contents: [
          {
            type: "text",
            text: "‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà",
            weight: "bold",
            size: "lg",
            color: "#00AA00"
          },
          {
            type: "text",
            text: fileName,
            wrap: true
          },
          {
            type: "text",
            text: "‡πÇ‡∏î‡∏¢: " + displayName,
            size: "sm",
            color: "#888888"
          },
          {
            type: "button",
            style: "link",
            action: {
              type: "uri",
              label: "‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå",
              uri: "https://drive.google.com/file/d/" + fileId + "/view"
            }
          }
        ]
      }
    }
  };
  pushMsg("YOUR_LINE_GROUP_ID", msg); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô LINE Group ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
}

function logUploadToSheet(fileName, displayName, fileUrl) {
  var sheet = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME);
  sheet.appendRow([new Date(), fileName, displayName, fileUrl]);
}

function deleteLastUploadedFile(userId) {
  try {
    var lastFileId = PropertiesService.getScriptProperties().getProperty("lastFile_" + userId);
    if (!lastFileId) return "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î";

    var file = DriveApp.getFileById(lastFileId);
    file.setTrashed(true);

    PropertiesService.getScriptProperties().deleteProperty("lastFile_" + userId);

    return "‚úÖ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
  } catch (e) {
    Logger.log("Error deleteLastUploadedFile: " + e);
    return "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î";
  }
}

function searchFilesByKeywordSafe(folderId, keyword, userId) {
  var folder = DriveApp.getFolderById(folderId);
  var userFolderName = sanitizeName(getUserProfile(userId).displayName);
  var userFolder = folder.getFoldersByName(userFolderName).hasNext()
    ? folder.getFoldersByName(userFolderName).next()
    : null;

  if (!userFolder) return [createTextFlex("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå")];

  var files = userFolder.getFiles();
  var prefix = "FL";
  for (var key in folderMap) {
    if (folderMap[key] === folderId) prefix = prefixMap[key];
  }

  var index = 0;
  var bubbles = [];
  var keywordLower = keyword.toLowerCase();
  while (files.hasNext()) {
    var file = files.next();
    var fileNameLower = file.getName().toLowerCase();
    if (fileNameLower.includes(keywordLower)) {
      index++;
      var idStr = prefix + ('00' + index).slice(-3);
      var fileId = file.getId();
      var date = Utilities.formatDate(file.getDateCreated(), Session.getScriptTimeZone(), "dd/MM/yyyy");

      bubbles.push({
        type: "bubble",
        size: "micro",
        body: {
          type: "box",
          layout: "vertical",
          contents: [
            { type: "text", text: `[ID : ${idStr}] ${file.getName()}`, weight: "bold", size: "sm", wrap: true },
            { type: "text", text: date, size: "xs", color: "#999999", margin: "xs" },
            {
              type: "button",
              style: "link",
              height: "sm",
              action: { type: "uri", label: "‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå", uri: "https://drive.google.com/file/d/" + fileId + "/view" }
            },
            {
              type: "button",
              style: "link",
              height: "sm",
              color: "#FF3B30",
              action: { type: "postback", label: "‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ", data: "deleteFile=" + fileId }
            }
          ]
        }
      });
    }
  }

  if (bubbles.length === 0) return [createTextFlex("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤")];
  if (bubbles.length > 10) {
    bubbles = bubbles.slice(0, 10);
    bubbles.push(createTextFlex("‚ö†Ô∏è ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 10 ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"));
  }

  return [{
    type: "flex",
    altText: "‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ " + keyword,
    contents: { type: "carousel", contents: bubbles }
  }];
}

function getUserProfile(userId) {
  var url = "https://api.line.me/v2/bot/profile/" + userId;
  var headers = {
    "headers": {
      "Authorization": "Bearer " + CHANNEL_TOKEN
    },
    "method": "get",
    "muteHttpExceptions": true
  };
  try {
    var response = UrlFetchApp.fetch(url, headers);
    var result = JSON.parse(response.getContentText());
    return result;
  } catch (e) {
    Logger.log("Error getUserProfile: " + e);
    return { displayName: "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ" };
  }
}

function replyMsg(replyToken, messages) {
  var url = "https://api.line.me/v2/bot/message/reply";
  var payload = JSON.stringify({
    replyToken: replyToken,
    messages: messages
  });
  UrlFetchApp.fetch(url, {
    method: "post",
    contentType: "application/json",
    headers: { Authorization: "Bearer " + CHANNEL_TOKEN },
    payload: payload
  });
}

function pushMsg(to, message) {
  var url = "https://api.line.me/v2/bot/message/push";
  var data = {
    to: to,
    messages: [message]
  };
  var options = {
    method: "post",
    headers: {
      "Content-Type": "application/json",
      "Authorization": "Bearer " + CHANNEL_TOKEN
    },
    payload: JSON.stringify(data),
    muteHttpExceptions: true
  };
  UrlFetchApp.fetch(url, options);
}

function listUserFilesByType(userId, folderInput, page = 1) {
  try {
    var folderKey = userFolderMap[folderInput.toLowerCase()] || "File_All";
    var mainFolderId = folderMap[folderKey];
    var mainFolder = DriveApp.getFolderById(mainFolderId);

    var displayName = sanitizeName(getUserProfile(userId).displayName);

    var userFolder = null;
    var folders = mainFolder.getFoldersByName(displayName);
    if (folders.hasNext()) userFolder = folders.next();
    if (!userFolder) return [createTextFlex(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå ${folderInput}`)];

    var files = [];
    var fIter = userFolder.getFiles();
    while (fIter.hasNext()) files.push(fIter.next());
    if (files.length === 0) return [createTextFlex(`‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå ${folderInput}`)];

    var prefix = prefixMap[folderKey] || "ID";
    var startIndex = (page - 1) * FILES_PER_PAGE;
    var endIndex = Math.min(startIndex + FILES_PER_PAGE, files.length);
    var bubbles = [];

    for (var i = startIndex; i < endIndex; i++) {
      var idStr = prefix + ('00' + (i + 1)).slice(-3);
      bubbles.push(createFileBubble(files[i], idStr, displayName));
    }

    if (endIndex < files.length) {
      bubbles.push({
        type: "bubble",
        size: "micro",
        body: {
          type: "box",
          layout: "vertical",
          spacing: "sm",
          contents: [
            { type: "text", text: "‚ö†Ô∏è", wrap: true, color: "#FF9900", align: "center", weight: "bold", size: "lg" },
            { type: "text", text: "‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ " + FILES_PER_PAGE + " ‡πÑ‡∏ü‡∏•‡πå", wrap: true, color: "#FF9900", align: "center" },
            { type: "text", text: "‡∏î‡∏π‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà", wrap: true, color: "#3399CC", align: "center" },
            { type: "text", text: "Google Drive", wrap: true, color: "#3399CC", align: "center", weight: "bold" },
            {
              type: "button",
              style: "primary", // ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
              height: "sm",
              color: "#34A853", // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡πÇ‡∏ó‡∏ô Google
              action: {
                type: "uri",
                label: "Open Drive",
                uri: "‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡πÇ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á Google Drive" //‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
              }
            }
          ]
        }
      });
    }


    return [{
      type: "flex",
      altText: "‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå " + folderInput,
      contents: { type: "carousel", contents: bubbles }
    }];
  } catch (e) {
    Logger.log("Error listing user files by type: " + e);
    return [createTextFlex("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + e.message)];
  }
}

